// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["views"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model AppSetting {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  key   String @unique
  value String
}

model User {
  id         String         @id @default(auto()) @map("_id") @db.ObjectId
  username   String         @unique
  externalId String?        @unique
  profile    Profile?
  solutions  UserSolution[]
}

model Profile {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  user        User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String  @unique @db.ObjectId
  picture     String?
  displayName String?
}

model Puzzle {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  slug        String     @unique
  title       String
  description String?
  solutions   Solution[]
  isPublic    Boolean    @default(true)
}

model Solution {
  id            String         @id @default(auto()) @map("_id") @db.ObjectId
  puzzle        Puzzle         @relation(fields: [puzzleId], references: [id], onDelete: Cascade)
  puzzleId      String         @db.ObjectId
  date          DateTime
  solution      String
  maxGuesses    Int            @default(6)
  userSolutions UserSolution[]

  @@unique([puzzleId, date])
}

model UserSolution {
  id         String            @id @default(auto()) @map("_id") @db.ObjectId
  userId     String            @db.ObjectId
  user       User              @relation(fields: [userId], references: [id], onDelete: Cascade)
  solutionId String            @db.ObjectId
  solution   Solution          @relation(fields: [solutionId], references: [id], onDelete: Cascade)
  state      UserSolutionState @default(UNSOLVED)
  guesses    String[]
}

enum UserSolutionState {
  UNSOLVED
  WIN
  LOSS
}

type UserPuzzleId {
  userId   String @db.ObjectId
  puzzleId String @db.ObjectId
}

view UserPuzzleStats {
  id              UserPuzzleId @id @map("_id")
  puzzleTitle     String
  winDistribution Int[]
  wins            Int
  losses          Int
}
